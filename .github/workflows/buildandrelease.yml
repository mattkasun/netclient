name: Build and Release

on:
  workflow_dispatch:
  release:
    types: [published]

jobs:

  version:
    runs-on: ubuntu-latest
    outputs:
      tag: ${{ steps.version.outputs.tag }}
      version: ${{ steps.version.outputs.version }}
    steps:
      - name: Get Version Number
        id: version
        run: |
          if [[ -n "${{ github.event.inputs.version }}" ]]; then
            NETCLIENT_VERSION=${{ github.event.inputs.version }}
          else
            NETCLIENT_VERSION=$(curl -fsSL https://api.github.com/repos/mattkasun/netclient/tags | grep 'name' | head -1 | cut -d'"' -f4)
          fi
          echo "NETCLIENT_VERSION=${NETCLIENT_VERSION}" >> $GITHUB_OUTPUT
          # remove everything but digits and . for package (deb, rpm, etc) versions

          PACKAGE_VERSION=$(echo ${NETMAKER_VERSION} | tr -cd '[:digit:].')
          echo "PACKAGE_VERSION=${PACKAGE_VERSION}" >> $GITHUB_OUTPUT
 
  netclient-x86:
    runs-on: ubuntu-latest
    needs: version
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup go
        uses: actions/setup-go@v3
        with:
          go-version: 1.19
      - name: Setup npm
        uses: actions/setup-node@v3
      - name: build gui
        run: |
          sudo apt-get update
          sudo apt install build-essential libgtk-3-dev libwebkit2gtk-4.0-dev libpcap-dev
          cd gui/frontend
          npm ci
          npm run build
          cd ../..
          go build --tags desktop,production  -ldflags='-s -w' . -o build/netclient
      - name: Upload netclient x86 gui to Release
        continue-on-error: true
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: netclient/build/netclient
          overwrite: true
          prerelease: true
          tag: ${{ needs.version.outputs.version }}
          asset_name: netclient-linux-amd64

      - name: Package x86 deb
        continue-on-error: true
        uses: gravitl/github-action-fpm@master
        with:
          fpm_args: './netclient/build/netclient=/sbin/netclient ./netclient/build/netclient.service=/lib/systemd/system/netclient.service'
          fpm_opts: '-s dir -t deb --architecture amd64 --version ${{ needs.version.outputs.version }}'

      - name: Upload x86 deb to Release
        continue-on-error: true
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: netclient_${{ needs.version.outputs.version }}_amd64.deb
          tag: ${{ needs.version.outputs.NETMAKER_VERSION }}
          overwrite: true
          prerelease: true
          asset_name: netclient_${{ needs.version.outputs.version }}_amd64.deb

      - name: Package x86 rpm
        continue-on-error: true
        uses: gravitl/github-action-fpm@master
        with:
          fpm_args: './netclient/build/netclient=/sbin/netclient ./netclient/build/netclient.service=/lib/systemd/system/netclient.service'
          fpm_opts: '-s dir -t rpm --architecture amd64 --version ${{ needs.version.outputs.version }}'

      - name: Upload x86 rpm to Release
        continue-on-error: true
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: netclient-${{ needs.version.outputs.version }}-1.x86_64.rpm
          tag: ${{ needs.version.outputs.version }}
          overwrite: true
          prerelease: true
          asset_name: netclient-${{ needs.version.outputs.version }}-1.x86_64.rpm

      - name: Package x86 pacman
        continue-on-error: true
        uses: gravitl/github-action-fpm@master
        with:
          # arch has particular path requirements --- cannot write to a symbolic link e.g. /sbin and /lib
          fpm_args: './netclient/build/netclient=/usr/bin/netclient ./netclient/build/netclient.service=/usr/lib/systemd/system/netclient.service'
          fpm_opts: '-s dir -t pacman --architecture amd64 --version ${{ needs.version.outputs.version }}'

      - name: Upload x86 pacman to Release
        continue-on-error: true
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: netclient-${{ needs.version.outputs.version }}-1-x86_64.pkg.tar.zst
          tag: ${{ needs.version.outputs.version }}
          overwrite: true
          prerelease: true
          asset_name: netclient-${{ needs.version.outputs.version }}-1-x86_64.pkg.tar.zst

#  netclient-arm:
#    runs-on: ubuntu-latest
#    needs: version
#    steps:
#      - name: Checkout
#        uses: actions/checkout@v3
#      - name: Set Variables
#        run: |
#          TAG=${{needs.version.outputs.tag}}
#          VERSION=${{needs.version.outputs.version}}
#          echo "NETMAKER_VERSION=${TAG}"  >> $GITHUB_ENV
#          echo "PACKAGE_VERSION=${VERSION}" >> $GITHUB_ENV
#      - name: Setup go
#        uses: actions/setup-go@v2
#        with:
#          go-version: 1.19
#      - name: Build
#        run: |
#          sudo apt update
#          sudo apt install build-essential libgtk-3-dev libwebkit2gtk-4.0-dev libpcap-dev
#          cd gui/frontend
#          npm ci
#          npm run build
#          cd ../..
#          env CGO_ENABLED=1 GOOS=linux GOARCH=arm GOARM=5 go build -ldflags="-s -w" -o build/netclient-arm5/netclient main.go
#          env CGO_ENABLED=1 GOOS=linux GOARCH=arm GOARM=6 go build -ldflags="-s -w" -o build/netclient-arm6/netclient main.go
#          env CGO_ENABLED=1 GOOS=linux GOARCH=arm GOARM=7 go build -ldflags="-s -w" -o build/netclient-arm7/netclient main.go
#          env CGO_ENABLED=1 GOOS=linux GOARCH=arm64 go build -ldflags="-s -w-" -o build/netclient-arm64/netclient main.go
#
#      - name: Upload arm5 to Release
#        uses: svenstaro/upload-release-action@v2
#        with:
#          repo_token: ${{ secrets.GITHUB_TOKEN }}
#          file: netclient/build/netclient-arm5/netclient
#          tag: ${{ env.NETMAKER_VERSION }}
#          overwrite: true
#          asset_name: netclient-linux-arm5
#
#      - name: Upload arm6 to Release
#        uses: svenstaro/upload-release-action@v2
#        with:
#          repo_token: ${{ secrets.GITHUB_TOKEN }}
#          file: netclient/build/netclient-arm6/netclient
#          tag: ${{ env.NETMAKER_VERSION }}
#          overwrite: true
#          asset_name: netclient-linux-arm6
#
#      - name: Upload arm7 to Release
#        uses: svenstaro/upload-release-action@v2
#        with:
#          repo_token: ${{ secrets.GITHUB_TOKEN }}
#          file: netclient/build/netclient-arm7/netclient
#          tag: ${{ env.NETMAKER_VERSION }}
#          overwrite: true
#          asset_name: netclient-netclient-arm7
#
#      - name: Upload arm64 to Release
#        continue-on-error: true
#        uses: svenstaro/upload-release-action@v2
#        with:
#          repo_token: ${{ secrets.GITHUB_TOKEN }}
#          file: netclient/build/netclient-arm64/netclient
#          tag: ${{ env.NETMAKER_VERSION }}
#          overwrite: true
#          asset_name: netclient-linux-arm64
#
#      - name: Package arm64 deb
#        continue-on-error: true
#        uses: gravitl/github-action-fpm@master
#        with:
#          fpm_args: './netclient/build/netclient-arm64/netclient=/sbin/netclient ./netclient/build/netclient.service=/lib/systemd/netclient.service'
#          fpm_opts: '-s dir -t deb --architecture arm64 --version ${{ env.PACKAGE_VERSION }}'
#      - name: Upload arm deb to Release
#        continue-on-error: true
#        uses: svenstaro/upload-release-action@v2
#        with:
#          repo_token: ${{ secrets.GITHUB_TOKEN }}
#          file: netclient_${{ env.PACKAGE_VERSION }}_arm64.deb
#          tag: ${{ env.NETMAKER_VERSION }}
#          overwrite: true
#          asset_name: netclient_${{ env.PACKAGE_VERSION }}_arm64.deb
#
#      - name: Package arm64 rpm
#        continue-on-error: true
#        uses: gravitl/github-action-fpm@master
#        with:
#          fpm_args: './netclient/build/netclient-arm64/netclient=/sbin/netclient ./netclient/build/netclient.service=/lib/systemd/netclient.service'
#          fpm_opts: '-s dir -t rpm --architecture arm64 --version ${{ env.PACKAGE_VERSION }}'
#
#      - name: Upload arm64 rpm to Release
#        continue-on-error: true
#        uses: svenstaro/upload-release-action@v2
#        with:
#          repo_token: ${{ secrets.GITHUB_TOKEN }}
#          file: netclient-${{ env.PACKAGE_VERSION }}-1.aarch64.rpm
#          tag: ${{ env.NETMAKER_VERSION }}
#          overwrite: true
#          asset_name: netclient-${{ env.PACKAGE_VERSION }}-1.aarch64.rpm
#
#  netclient-mipsle:
#    runs-on: ubuntu-latest
#    needs: version
#    steps:
#      - name: Checkout
#        uses: actions/checkout@v3
#      - name: Set Variables
#        run: |
#          TAG=${{needs.version.outputs.tag}}
#          VERSION=${{needs.version.outputs.version}}
#          echo "NETMAKER_VERSION=${TAG}"  >> $GITHUB_ENV
#          echo "PACKAGE_VERSION=${VERSION}" >> $GITHUB_ENV
#      - name: Setup go
#        uses: actions/setup-go@v2
#        with:
#          go-version: 1.19
#      - name: Build
#        run: |
#          cd netclient
#          env CGO_ENABLED=0 GOOS=linux GOARCH=mipsle go build -tags headless -ldflags "-s -w" -o build/netclient-mipsle/netclient-mipsle main.go && upx -o build/netclient-mipsle/netclient-mipsle-upx build/netclient-mipsle/netclient-mipsle
#          env CGO_ENABLED=0 GOOS=linux GOARCH=mipsle GOMIPS=softfloat go build -tags headless -ldflags "-s -w" -o build/netclient-mipsle/netclient-mipsle-softfloat main.go && upx -o build/netclient-mipsle/netclient-mipsle-softfloat-upx build/netclient-mipsle/netclient-mipsle-softfloat
#
#      - name: Upload mipsle to Release
#        uses: svenstaro/upload-release-action@v2
#        with:
#          repo_token: ${{ secrets.GITHUB_TOKEN }}
#          file: netclient/build/netclient-mipsle/netclient-mipsle
#          tag: ${{ env.NETMAKER_VERSION }}
#          overwrite: true
#          prerelease: true
#          asset_name: netclient-linux-mipsle
#
#      - name: Upload mipsle-upx to Release
#        uses: svenstaro/upload-release-action@v2
#        with:
#          repo_token: ${{ secrets.GITHUB_TOKEN }}
#          file: netclient/build/netclient-mipsle/netclient-mipsle-upx
#          tag: ${{ env.NETMAKER_VERSION }}
#          overwrite: true
#          prerelease: true
#          asset_name: netclient-linux-mipsle-upx
#
#      - name: Upload mipsle-softfloat to Release
#        uses: svenstaro/upload-release-action@v2
#        with:
#          repo_token: ${{ secrets.GITHUB_TOKEN }}
#          file: netclient/build/netclient-mipsle/netclient-mipsle-softfloat
#          tag: ${{ env.NETMAKER_VERSION }}
#          overwrite: true
#          prerelease: true
#          asset_name: netclient-linux-mipsle-softfloat
#
#      - name: Upload mipsle-softfloat-upx to Release
#        uses: svenstaro/upload-release-action@v2
#        with:
#          repo_token: ${{ secrets.GITHUB_TOKEN }}
#          file: netclient/build/netclient-mipsle/netclient-mipsle-softfloat-upx
#          tag: ${{ env.NETMAKER_VERSION }}
#          overwrite: true
#          prerelease: true
#          asset_name: netclient-linux-mipsle-softfloat-upx
#
#  netclient-mips:
#    runs-on: ubuntu-latest
#    needs: version
#    steps:
#      - name: Checkout
#        uses: actions/checkout@v3
#      - name: Set Variables
#        run: |
#          TAG=${{needs.version.outputs.tag}}
#          VERSION=${{needs.version.outputs.version}}
#          echo "NETMAKER_VERSION=${TAG}"  >> $GITHUB_ENV
#          echo "PACKAGE_VERSION=${VERSION}" >> $GITHUB_ENV
#      - name: Setup go
#        uses: actions/setup-go@v2
#        with:
#          go-version: 1.19
#      - name: Build
#        run: |
#          cd netclient
#          env CGO_ENABLED=0 GOOS=linux GOARCH=mips go build -ldflags "-s -w" -o build/netclient-mips/netclient-mips main.go && upx -o build/netclient-mips/netclient-mips-upx build/netclient-mips/netclient-mips
#          env CGO_ENABLED=0 GOOS=linux GOARCH=mips GOMIPS=softfloat go build -ldflags "-s -w" -o build/netclient-mips/netclient-mips-softfloat main.go && upx -o build/netclient-mips/netclient-mips-softfloat-upx build/netclient-mips/netclient-mips-softfloat
#
#      - name: Upload mips to Release
#        uses: svenstaro/upload-release-action@v2
#        with:
#          repo_token: ${{ secrets.GITHUB_TOKEN }}
#          file: netclient/build/netclient-mips/netclient-mips
#          tag: ${{ env.NETMAKER_VERSION }}
#          overwrite: true
#          prerelease: true
#          asset_name: netclient-linux-mips
#
#      - name: Upload mips-upx to Release
#        uses: svenstaro/upload-release-action@v2
#        with:
#          repo_token: ${{ secrets.GITHUB_TOKEN }}
#          file: netclient/build/netclient-mips/netclient-mips-upx
#          tag: ${{ env.NETMAKER_VERSION }}
#          overwrite: true
#          prerelease: true
#          asset_name: netclient-linux-mips-upx
#
#      - name: Upload netclient-mips-softfloat to Release
#        uses: svenstaro/upload-release-action@v2
#        with:
#          repo_token: ${{ secrets.GITHUB_TOKEN }}
#          file: netclient/build/netclient-mips/netclient-mips-softfloat
#          tag: ${{ env.NETMAKER_VERSION }}
#          overwrite: true
#          prerelease: true
#          asset_name: netclient-linux-mips-softfloat
#
#      - name: Upload netclient-mips-softfloat-upx to Release
#        uses: svenstaro/upload-release-action@v2
#        with:
#          repo_token: ${{ secrets.GITHUB_TOKEN }}
#          file: netclient/build/netclient-mips/netclient-mips-softfloat-upx
#          tag: ${{ env.NETMAKER_VERSION }}
#          overwrite: true
#          prerelease: true
#          asset_name: netclient-linux-mips-softfloat-upx
#
#
#  netclient-freebsd:
#    runs-on: ubuntu-latest
#    needs: version
#    steps:
#      - name: Checkout
#        uses: actions/checkout@v3
#      - name: Set Variables
#        run: |
#          TAG=${{needs.version.outputs.tag}}
#          VERSION=${{needs.version.outputs.version}}
#          echo "NETMAKER_VERSION=${TAG}"  >> $GITHUB_ENV
#          echo "PACKAGE_VERSION=${VERSION}" >> $GITHUB_ENV
#      - name: Setup go
#        uses: actions/setup-go@v3
#        with:
#          go-version: 1.19
#      - name: Build
#        run: |
#          mkdir gui/frontend/dist
#          touch gui/frontend/dist/index.html
#          env CGO_ENABLED=0 GOOS=freebsd GOARCH=amd64 go build -tags headless -ldflags="-s -w -X 'main.version=${NETMAKER_VERSION}'" -o build/netclient-freebsd/netclient .
#          env CGO_ENABLED=0 GOOS=freebsd GOARCH=arm GOARM=5 go build -tags headless -ldflags="-s -w -X 'main.version=${NETMAKER_VERSION}'" -o build/netclient-freebsd-arm5/netclient .
#          env CGO_ENABLED=0 GOOS=freebsd GOARCH=arm GOARM=6 go build -tags headless -ldflags="-s -w -X 'main.version=${NETMAKER_VERSION}'" -o build/netclient-freebsd-arm6/netclient .
#          env CGO_ENABLED=0 GOOS=freebsd GOARCH=arm GOARM=7 go build -tags headless -ldflags="-s -w -X 'main.version=${NETMAKER_VERSION}'" -o build/netclient-freebsd-arm7/netclient .
#          env CGO_ENABLED=0 GOOS=freebsd GOARCH=arm64 go build -tags headless -ldflags="-s -w -X 'main.version=${NETMAKER_VERSION}'" -o build/netclient-freebsd-arm64/netclient .
#
#      - name: Upload freebsd to Release
#        uses: svenstaro/upload-release-action@v2
#        with:
#          repo_token: ${{ secrets.GITHUB_TOKEN }}
#          file: netclient/build/netclient-freebsd/netclient
#          tag: ${{ env.NETMAKER_VERSION }}
#          overwrite: true
#          prerelease: true
#          asset_name: netclient-freebsd-amd64
#
#      - name: Upload freebsd-arm5 to Release
#        uses: svenstaro/upload-release-action@v2
#        with:
#          repo_token: ${{ secrets.GITHUB_TOKEN }}
#          file: netclient/build/netclient-freebsd-arm5/netclient
#          tag: ${{ env.NETMAKER_VERSION }}
#          overwrite: true
#          prerelease: true
#          asset_name: netclient-freebsd-arm5
#
#      - name: Upload freebsd-arm6 to Release
#        uses: svenstaro/upload-release-action@v2
#        with:
#          repo_token: ${{ secrets.GITHUB_TOKEN }}
#          file: netclient/build/netclient-freebsd-arm6/netclient
#          tag: ${{ env.NETMAKER_VERSION }}
#          overwrite: true
#          prerelease: true
#          asset_name: netclient-freebsd-arm6
#
#      - name: Upload freebsd-arm7 to Release
#        uses: svenstaro/upload-release-action@v2
#        with:
#          repo_token: ${{ secrets.GITHUB_TOKEN }}
#          file: netclient/build/netclient-freebsd-arm7/netclient
#          tag: ${{ env.NETMAKER_VERSION }}
#          overwrite: true
#          prerelease: true
#          asset_name: netclient-freebsd-arm7
#
#      - name: Upload freebsd-arm64 to Release
#        uses: svenstaro/upload-release-action@v2
#        with:
#          repo_token: ${{ secrets.GITHUB_TOKEN }}
#          file: netclient/build/netclient-freebsd-arm64/netclient
#          tag: ${{ env.NETMAKER_VERSION }}
#          overwrite: true
#          prerelease: true
#          asset_name: netclient-freebsd-arm64
#
#
#  netclient-darwin:
#    runs-on: macos-latest
#    needs: version
#    steps:
#      - name: Checkout
#        uses: actions/checkout@v3
#      - name: Set Variables
#        run: |
#          TAG=${{needs.version.outputs.tag}}
#          VERSION=${{needs.version.outputs.version}}
#          echo "NETMAKER_VERSION=${TAG}"  >> $GITHUB_ENV
#          echo "PACKAGE_VERSION=${VERSION}" >> $GITHUB_ENV
#      - name: Setup go
#        uses: actions/setup-go@v2
#        with:
#          go-version: 1.19
#      - name: Build
#        run: |
#          env CGO_ENABLED=1 GOOS=darwin GOARCH=amd64 go build -tags=desktop,production -ldflags="-s -w -X 'main.version=${NETMAKER_VERSION}'" -o build/netclient-darwin/netclient .
#          env CGO_ENABLED=1 GOOS=darwin GOARCH=arm64 go build -tags=desktop,production -ldflags="-s -w -X 'main.version=${NETMAKER_VERSION}'" -o build/netclient-darwin-arm64/netclient main.go
#      - name: Upload darwin-amd64 to Release
#        uses: svenstaro/upload-release-action@v2
#        with:
#          repo_token: ${{ secrets.GITHUB_TOKEN }}
#          file: netclient/build/netclient-darwin/netclient
#          tag: ${{ env.NETMAKER_VERSION }}
#          overwrite: true
#          prerelease: true
#          asset_name: netclient-darwin-amd64
#
#      - name: Upload darwin-arm64 to Release
#        uses: svenstaro/upload-release-action@v2
#        with:
#          repo_token: ${{ secrets.GITHUB_TOKEN }}
#          file: netclient/build/netclient-darwin-arm64/netclient
#          tag: ${{ env.NETMAKER_VERSION }}
#          overwrite: true
#          prerelease: true
#          asset_name: netclient-darwin-arm64
#
#  netclient-windows:
#    runs-on: windows-latest
#    needs: version
#    steps:
#      - name: Checkout
#        uses: actions/checkout@v3
#      - name: Set Variables
#        run: |
#          TAG=${{needs.version.outputs.tag}}
#          VERSION=${{needs.version.outputs.version}}
#          echo "NETMAKER_VERSION=${TAG}"  >> $GITHUB_ENV
#          echo "PACKAGE_VERSION=${VERSION}" >> $GITHUB_ENV
#        shell: bash
#      - name: Setup go
#        uses: actions/setup-go@v3
#        with:
#          go-version: 1.19
#      - name: Mysys2 setup
#        uses: msys2/setup-msys2@v2
#        with:
#          install: >-
#            git
#            mingw-w64-x86_64-toolchain
#      - name: Build
#        run: |
#          echo $(go env GOPATH)/bin >> $GITHUB_PATH
#          go get -v github.com/josephspurrier/goversioninfo
#          go install -v github.com/josephspurrier/goversioninfo/cmd/goversioninfo
#          go generate
#          go build -tags=production,desktop -ldflags="-X 'main.version=${NETMAKER_VERSION}'" -o build/netclient.exe .
#
#      - name: Upload netclient windows to Release
#        continue-on-error: true
#        uses: svenstaro/upload-release-action@v2
#        with:
#          repo_token: ${{ secrets.GITHUB_TOKEN }}
#          file: netclient/build/netclient.exe
#          tag: ${{ env.NETMAKER_VERSION }}
#          overwrite: true
#          prerelease: true
#          asset_name: netclient.exe
#
#  linux-packages:
#    runs-on: ubuntu-latest
#    needs: [version, netclient-x86, netclient-arm]
#    steps:
#      - name: Repository Dispatch
#        uses: peter-evans/repository-dispatch@v2.1.1
#        with:
#          token: ${{ secrets.PERS_TOKEN_FOR_NETMAKER_DEVOPS}}
#          repository: gravitl/netmaker-devops
#          event-type: build-packages
#          client-payload: '{"VERSION": "${{ env.PACKAGE_VERSION }}"}'
