name: Build and Release

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Netmaker version'
        required: true
  release:
    types: [published]

jobs:
  gui-builds:
    strategy:
      fail-fast: false
      matrix:
        build: [
          {name: netclient-linux-amd64, platform: linux/amd64, os: ubuntu-latest},
          {name: netclient-linux-arm64, platform: linux/arm64, os: ubuntu-latest},
          {name: netclient-linux-arm7, platform: linux/arm7, os: ubuntu-latest},
          {name: netclient-linux-arm6, platform: linux/arm6, os: ubuntu-latest},
          {name: netclient-linux-arm5, platform: linux/arm5, os: ubuntu-latest},
          {name: netclient-darwin-amd64, platform: darwin/amd64, os: macos-latest},
          {name: netclient-darwin-arm64, platform: darwin/arm64, os: macos-latest},
          {name: netclient-window-arm64, platform: windows/amd64, os: windows-latest},
        ]
    runs-on: ${{ matrix-os }}
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive
      - uses: dAppServer/wails-build-action@v2
        with:
          build-name: ${{ matrix.build.name }}
          build-platform: ${{ matrix.build.platform }}
          go-version: 1.19
          node-version: 19.x

  version:
    runs-on: ubuntu-latest
    outputs:
      tag: ${{ steps.echo.outputs.tag }}
      version: ${{ steps.echo.outputs.version }}
    steps:
      - name: Get Version Number
        run: |
          if [[ -n "${{ github.event.inputs.version }}" ]]; then
            NETMAKER_VERSION=${{ github.event.inputs.version }}
          else
            NETMAKER_VERSION=$(curl -fsSL https://api.github.com/repos/gravitl/netmaker/tags | grep 'name' | head -1 | cut -d'"' -f4)
          fi
          echo "NETMAKER_VERSION=${NETMAKER_VERSION}" >> $GITHUB_ENV
          # remove everything but digits and . for package (deb, rpm, etc) versions
          PACKAGE_VERSION=$(echo ${NETMAKER_VERSION} | tr -cd '[:digit:].')
          echo "PACKAGE_VERSION=${PACKAGE_VERSION}" >> $GITHUB_ENV

  netclient-x86:
    runs-on: ubuntu-latest
    needs: version
    steps:
      - name: Checkout
        uses: actions/checkout@v3
          echo "PACKAGE_VERSION=${VERSION}" >> $GITHUB_ENV
      - name: Setup go
        uses: actions/setup-go@v3
        with:
          go-version: 1.19
      - name: Setup npm
        uses: actions/setup-nodev3
      - name: build gui
        run: |
          sudo apt-get update
          sudo apt-get install build-essential libgtk3 libwebkit
          go build -tags desktop,production ldflags="-s -w" -o build/netclient .
      - name: Package x86 deb
        continue-on-error: true
        uses: gravitl/github-action-fpm@master
        with:
          fpm_args: './netclient/build/netclient-linux-amd64=/sbin/netclient ./netclient/build/netclient.service=/lib/systemd/system/netclient.service'
          fpm_opts: '-s dir -t deb --architecture amd64 --version ${{ env.PACKAGE_VERSION }}'
      - name: Upload x86 deb to Release
        continue-on-error: true
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: netclient_${{ env.PACKAGE_VERSION }}_amd64.deb
          tag: ${{ env.NETMAKER_VERSION }}
          overwrite: true
          prerelease: true
          asset_name: netclient_${{ env.PACKAGE_VERSION }}_amd64.deb
      - name: Package x86 rpm
        continue-on-error: true
        uses: gravitl/github-action-fpm@master
        with:
          fpm_args: './netclient/build/netclient=/sbin/netclient ./netclient/build/netclient.service=/lib/systemd/system/netclient.service'
          fpm_opts: '-s dir -t rpm --architecture amd64 --version ${{ env.PACKAGE_VERSION }}'
      - name: Upload x86 rpm to Release
        continue-on-error: true
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: netclient-${{ env.PACKAGE_VERSION }}-1.x86_64.rpm
          tag: ${{ env.NETMAKER_VERSION }}
          overwrite: true
          prerelease: true
          asset_name: netclient-${{ env.PACKAGE_VERSION }}-1.x86_64.rpm
      - name: Package x86 pacman
        continue-on-error: true
        uses: gravitl/github-action-fpm@master
        with:
          # arch has particular path requirements --- cannot write to a symbolic link e.g. /sbin and /lib
          fpm_args: './netclient/build/netclient=/usr/bin/netclient ./netclient/build/netclient.service=/usr/lib/systemd/system/netclient.service'
          fpm_opts: '-s dir -t pacman --architecture amd64 --version ${{ env.PACKAGE_VERSION }}'
      - name: Upload x86 pacman to Release
        continue-on-error: true
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: netclient-${{ env.PACKAGE_VERSION }}-1-x86_64.pkg.tar.zst
          tag: ${{ env.NETMAKER_VERSION }}
          overwrite: true
          prerelease: true
          asset_name: netclient-${{ env.PACKAGE_VERSION }}-1-x86_64.pkg.tar.zst

#  netclient-arm:
#    runs-on: ubuntu-latest
#    needs: version
#    steps:
#      - name: Checkout
#        uses: actions/checkout@v3
#      - name: Set Variables
#        run: |
#          TAG=${{needs.version.outputs.tag}}
#          VERSION=${{needs.version.outputs.version}}
#          echo "NETMAKER_VERSION=${TAG}"  >> $GITHUB_ENV
#          echo "PACKAGE_VERSION=${VERSION}" >> $GITHUB_ENV
#      - name: Setup go
#        uses: actions/setup-go@v2
#        with:
#          go-version: 1.19
#      - name: Build
#        run: |
#          env CGO_ENABLED=0 GOOS=linux GOARCH=arm GOARM=5 go build -ldflags="-X 'main.version=${NETMAKER_VERSION}'" -o build/netclient-arm5/netclient main.go
#          env CGO_ENABLED=0 GOOS=linux GOARCH=arm GOARM=6 go build -ldflags="-X 'main.version=${NETMAKER_VERSION}'" -o build/netclient-arm6/netclient main.go
#          env CGO_ENABLED=0 GOOS=linux GOARCH=arm GOARM=7 go build -ldflags="-X 'main.version=${NETMAKER_VERSION}'" -o build/netclient-arm7/netclient main.go
#          env CGO_ENABLED=0 GOOS=linux GOARCH=arm64 go build -ldflags="-X 'main.version=${NETMAKER_VERSION}'" -o build/netclient-arm64/netclient main.go
#
#      - name: Upload arm5 to Release
#        uses: svenstaro/upload-release-action@v2
#        with:
#          repo_token: ${{ secrets.GITHUB_TOKEN }}
#          file: netclient/build/netclient-arm5/netclient
#          tag: ${{ env.NETMAKER_VERSION }}
#          overwrite: true
#          prerelease: truego build -tags desktop,production -ldflags "-w -s
#          asset_name: netclient-linux-arm5
#
#      - name: Upload arm6 to Release
#        uses: svenstaro/upload-release-action@v2
#        with:
#          repo_token: ${{ secrets.GITHUB_TOKEN }}
#          file: netclient/build/netclient-arm6/netclient
#          tag: ${{ env.NETMAKER_VERSION }}
#          overwrite: true
#          prerelease: true
#          asset_name: netclient-linux-arm6
#
#      - name: Upload arm7 to Release
#        uses: svenstaro/upload-release-action@v2
#        with:
#          repo_token: ${{ secrets.GITHUB_TOKEN }}
#          file: netclient/build/netclient-arm7/netclient
#          tag: ${{ env.NETMAKER_VERSION }}
#          overwrite: true
#          prerelease: true
#          asset_name: netclient-netclient-arm7
#
#      - name: Upload arm64 to Release
#        continue-on-error: true
#        uses: svenstaro/upload-release-action@v2
#        with:
#          repo_token: ${{ secrets.GITHUB_TOKEN }}
#          file: netclient/build/netclient-arm64/netclient
#          tag: ${{ env.NETMAKER_VERSION }}
#          overwrite: true
#          prerelease: true
#          asset_name: netclient-linux-arm64
#
#      - name: Package arm64 deb
#        continue-on-error: true
#        uses: gravitl/github-action-fpm@master
#        with:
#          fpm_args: './netclient/build/netclient-linux-arm64/netclient=/sbin/netclient ./netclient/build/netclient.service=/lib/systemd/netclient.service'
#          fpm_opts: '-s dir -t deb --architecture arm64 --version ${{ env.PACKAGE_VERSION }}'
#      - name: Upload arm deb to Release
#        continue-on-error: true
#        uses: svenstaro/upload-release-action@v2
#        with:
#          repo_token: ${{ secrets.GITHUB_TOKEN }}
#          file: netclient_${{ env.PACKAGE_VERSION }}_arm64.deb
#          tag: ${{ env.NETMAKER_VERSION }}
#          overwrite: true
#          prerelease: true
#          asset_name: netclient_${{ env.PACKAGE_VERSION }}_arm64.deb
#
#      - name: Package arm64 rpm
#        continue-on-error: true
#        uses: gravitl/github-action-fpm@master
#        with:
#          fpm_args: './netclient/build/netclient-linux-arm64/netclient=/sbin/netclient ./netclient/build/netclient.service=/lib/systemd/netclient.service'
#          fpm_opts: '-s dir -t rpm --architecture arm64 --version ${{ env.PACKAGE_VERSION }}'
#
#      - name: Upload arm64 rpm to Release
#        continue-on-error: true
#        uses: svenstaro/upload-release-action@v2
#        with:
#          repo_token: ${{ secrets.GITHUB_TOKEN }}
#          file: netclient-${{ env.PACKAGE_VERSION }}-1.aarch64.rpm
#          tag: ${{ env.NETMAKER_VERSION }}
#          overwrite: true
#          prerelease: true
#          asset_name: netclient-${{ env.PACKAGE_VERSION }}-1.aarch64.rpm
#
#  netclient-mipsle:
#    runs-on: ubuntu-latest
#    needs: version
#    steps:
#      - name: Checkout
#        uses: actions/checkout@v3
#      - name: Set Variables
#        run: |
#          TAG=${{needs.version.outputs.tag}}
#          VERSION=${{needs.version.outputs.version}}
#          echo "NETMAKER_VERSION=${TAG}"  >> $GITHUB_ENV
#          echo "PACKAGE_VERSION=${VERSION}" >> $GITHUB_ENV
#      - name: Setup go
#        uses: actions/setup-go@v2
#        with:
#          go-version: 1.19
#      - name: Build
#        run: |
#          cd netclient
#          env CGO_ENABLED=0 GOOS=linux GOARCH=mipsle go build -tags headless -ldflags "-s -w -X 'main.version=$NETMAKER_VERSION'" -o build/netclient-mipsle/netclient-mipsle main.go && upx -o build/netclient-mipsle/netclient-mipsle-upx build/netclient-mipsle/netclient-mipsle
#          env CGO_ENABLED=0 GOOS=linux GOARCH=mipsle GOMIPS=softfloat go build -tags headless -ldflags "-s -w -X 'main.version=$NETMAKER_VERSION'" -o build/netclient-mipsle/netclient-mipsle-softfloat main.go && upx -o build/netclient-mipsle/netclient-mipsle-softfloat-upx build/netclient-mipsle/netclient-mipsle-softfloat
#
#      - name: Upload mipsle to Release
#        uses: svenstaro/upload-release-action@v2
#        with:
#          repo_token: ${{ secrets.GITHUB_TOKEN }}
#          file: netclient/build/netclient-mipsle/netclient-mipsle
#          tag: ${{ env.NETMAKER_VERSION }}
#          overwrite: true
#          prerelease: true
#          asset_name: netclient-linux-mipsle
#
#      - name: Upload mipsle-upx to Release
#        uses: svenstaro/upload-release-action@v2
#        with:
#          repo_token: ${{ secrets.GITHUB_TOKEN }}
#          file: netclient/build/netclient-mipsle/netclient-mipsle-upx
#          tag: ${{ env.NETMAKER_VERSION }}
#          overwrite: true
#          prerelease: true
#          asset_name: netclient-linux-mipsle-upx
#
#      - name: Upload mipsle-softfloat to Release
#        uses: svenstaro/upload-release-action@v2
#        with:
#          repo_token: ${{ secrets.GITHUB_TOKEN }}
#          file: netclient/build/netclient-mipsle/netclient-mipsle-softfloat
#          tag: ${{ env.NETMAKER_VERSION }}
#          overwrite: true
#          prerelease: true
#          asset_name: netclient-linux-mipsle-softfloat
#
#      - name: Upload mipsle-softfloat-upx to Release
#        uses: svenstaro/upload-release-action@v2
#        with:
#          repo_token: ${{ secrets.GITHUB_TOKEN }}
#          file: netclient/build/netclient-mipsle/netclient-mipsle-softfloat-upx
#          tag: ${{ env.NETMAKER_VERSION }}
#          overwrite: true
#          prerelease: true
#          asset_name: netclient-linux-mipsle-softfloat-upx
#
#  netclient-mips:
#    runs-on: ubuntu-latest
#    needs: version
#    steps:
#      - name: Checkout
#        uses: actions/checkout@v3
#      - name: Set Variables
#        run: |
#          TAG=${{needs.version.outputs.tag}}
#          VERSION=${{needs.version.outputs.version}}
#          echo "NETMAKER_VERSION=${TAG}"  >> $GITHUB_ENV
#          echo "PACKAGE_VERSION=${VERSION}" >> $GITHUB_ENV
#      - name: Setup go
#        uses: actions/setup-go@v2
#        with:
#          go-version: 1.19
#      - name: Build
#        run: |
#          cd netclient
#          env CGO_ENABLED=0 GOOS=linux GOARCH=mips go build -ldflags "-s -w -X 'main.version=$NETMAKER_VERSION'" -o build/netclient-mips/netclient-mips main.go && upx -o build/netclient-mips/netclient-mips-upx build/netclient-mips/netclient-mips
#          env CGO_ENABLED=0 GOOS=linux GOARCH=mips GOMIPS=softfloat go build -ldflags "-s -w -X 'main.version=$NETMAKER_VERSION'" -o build/netclient-mips/netclient-mips-softfloat main.go && upx -o build/netclient-mips/netclient-mips-softfloat-upx build/netclient-mips/netclient-mips-softfloat
#
#      - name: Upload mips to Release
#        uses: svenstaro/upload-release-action@v2
#        with:
#          repo_token: ${{ secrets.GITHUB_TOKEN }}
#          file: netclient/build/netclient-mips/netclient-mips
#          tag: ${{ env.NETMAKER_VERSION }}
#          overwrite: true
#          prerelease: true
#          asset_name: netclient-linux-mips
#
#      - name: Upload mips-upx to Release
#        uses: svenstaro/upload-release-action@v2
#        with:
#          repo_token: ${{ secrets.GITHUB_TOKEN }}
#          file: netclient/build/netclient-mips/netclient-mips-upx
#          tag: ${{ env.NETMAKER_VERSION }}
#          overwrite: true
#          prerelease: true
#          asset_name: netclient-linux-mips-upx
#
#      - name: Upload netclient-mips-softfloat to Release
#        uses: svenstaro/upload-release-action@v2
#        with:
#          repo_token: ${{ secrets.GITHUB_TOKEN }}
#          file: netclient/build/netclient-mips/netclient-mips-softfloat
#          tag: ${{ env.NETMAKER_VERSION }}
#          overwrite: true
#          prerelease: true
#          asset_name: netclient-linux-mips-softfloat
#
#      - name: Upload netclient-mips-softfloat-upx to Release
#        uses: svenstaro/upload-release-action@v2
#        with:
#          repo_token: ${{ secrets.GITHUB_TOKEN }}
#          file: netclient/build/netclient-mips/netclient-mips-softfloat-upx
#          tag: ${{ env.NETMAKER_VERSION }}
#          overwrite: true
#          prerelease: true
#          asset_name: netclient-linux-mips-softfloat-upx

  netclient-freebsd:
    runs-on: ubuntu-latest
    needs: version
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set Variables
        run: |
          TAG=${{needs.version.outputs.tag}}
          VERSION=${{needs.version.outputs.version}}
          echo "NETMAKER_VERSION=${TAG}"  >> $GITHUB_ENV
          echo "PACKAGE_VERSION=${VERSION}" >> $GITHUB_ENV
      - name: Setup go
        uses: actions/setup-go@v2
        with:
          go-version: 1.19
      - name: Build
        run: |
          cd netclient
          env CGO_ENABLED=0 GOOS=freebsd GOARCH=amd64 go build -tags headless -ldflags="-X 'main.version=${NETMAKER_VERSION}'" -o build/netclient-freebsd/netclient .
          env CGO_ENABLED=0 GOOS=freebsd GOARCH=arm GOARM=5 go build -tags headless -ldflags="-X 'main.version=${NETMAKER_VERSION}'" -o build/netclient-freebsd-arm5/netclient .
          env CGO_ENABLED=0 GOOS=freebsd GOARCH=arm GOARM=6 go build -tags headless -ldflags="-X 'main.version=${NETMAKER_VERSION}'" -o build/netclient-freebsd-arm6/netclient .
          env CGO_ENABLED=0 GOOS=freebsd GOARCH=arm GOARM=7 go build -tags headless -ldflags="-X 'main.version=${NETMAKER_VERSION}'" -o build/netclient-freebsd-arm7/netclient .
            env CGO_ENABLED=0 GOOS=freebsd GOARCH=arm64 go build -tags headless -ldflags="-X 'main.version=${NETMAKER_VERSION}'" -o build/netclient-freebsd-arm64/netclient .

      - name: Upload freebsd to Release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: netclient/build/netclient-freebsd/netclient
          tag: ${{ env.NETMAKER_VERSION }}
          overwrite: true
          prerelease: true
          asset_name: netclient-freebsd-amd64

      - name: Upload freebsd-arm5 to Release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: netclient/build/netclient-freebsd-arm5/netclient
          tag: ${{ env.NETMAKER_VERSION }}
          overwrite: true
          prerelease: true
          asset_name: netclient-freebsd-arm5

      - name: Upload freebsd-arm6 to Release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: netclient/build/netclient-freebsd-arm6/netclient
          tag: ${{ env.NETMAKER_VERSION }}
          overwrite: true
          prerelease: true
          asset_name: netclient-freebsd-arm6

      - name: Upload freebsd-arm7 to Release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: netclient/build/netclient-freebsd-arm7/netclient
          tag: ${{ env.NETMAKER_VERSION }}
          overwrite: true
          prerelease: true
          asset_name: netclient-freebsd-arm7

      - name: Upload freebsd-arm64 to Release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: netclient/build/netclient-freebsd-arm64/netclient
          tag: ${{ env.NETMAKER_VERSION }}
          overwrite: true
          prerelease: true
          asset_name: netclient-freebsd-arm64
