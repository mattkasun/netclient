name: Build and Release

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Netclient version'
        required: true
  release:
    types: [published]

jobs:
  version:
    runs-on: ubuntu-latest
    outputs:
      tag: ${{ steps.version.outputs.tag }}
      version: ${{ steps.version.outputs.package_version }}
    steps:
      - name: Get Version Number
        id: version
        run: |
          if [[ -n "${{ github.event.inputs.version }}" ]]; then
            VERSION=${{ github.event.inputs.version }}
          else
            VERSION=$(curl -fsSL https://api.github.com/repos/gravitl/netmaker/tags | grep 'name' | head -1 | cut -d'"' -f4)
          fi
          echo "TAG=${VERSION}" >> $GITHUB_OUTPUT

          # remove everything but digits and . for package (deb, rpm, etc) versions
          PACKAGE_VERSION=$(echo ${VERSION} | tr -cd '[:digit:].')
          echo "PACKAGE_VERSION=${PACKAGE_VERSION}" >> $GITHUB_OUTPUT
 
  netclient-linux-headless:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup go
        uses: actions/setup-go@v3
        with:
          go-version: 1.19
      - name: Run GoReleaser
        uses: actions/goreleaser-action@v4
        with:
          args: release --clean

  netclient-freebsd:
    runs-on: ubuntu-latest
    needs: version
    steps:
      - name: Setup SSH
        run: |
          mkdir -p ~/.ssh/
          echo "$SSH_KEY" > ~/ssh/id_devops
          chmod 600 ~/.ssh/id_devops
          cat >>~/.ssh/confg << END
          Host *.clustercat.com
            User root
            IdentityFile ~/.ssh/id_devops
            StrictHostKeyChecking no
          END
        env:
          SSH_KEY: ${{ secrets.TESTING_SSH_KEY }}
      - name: build on freebsd
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: freebsd.clustercat.com
          username: freebsd
          key: ${{ secrets.TESTING_SSH_KEY }}
          script: |
            cd netclient
            git switch release_${{ needs.version.outputs.tag }}
            git pull
            go build -tags headless -ldflags='-s -w'.
      - name: get freebsd build
        run: |
          scp freebsd@freebsd.clustercat.com:~/netclient/netclient ./dist/netclient
      - name: Upload freebsd to Release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: dist/netclient
          tag: ${{ needs.version.outputs.tag }}
          overwrite: true
          asset_name: netclient-freebsd-amd64

  netclient-darwin:
    runs-on: macos-latest
    needs: version
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set Variables
        run: |
          TAG=${{needs.version.outputs.tag}}
          VERSION=${{needs.version.outputs.version}}
          echo "NETMAKER_VERSION=${TAG}"  >> $GITHUB_ENV
          echo "PACKAGE_VERSION=${VERSION}" >> $GITHUB_ENV
      - name: Setup go
        uses: actions/setup-go@v2
        with:
          go-version: 1.19
      - name: Build
        run: |
          cd netclient
          env GOOS=darwin GOARCH=amd64 go build -tags=desktop,production -ldflags="-s -w -X 'main.version=${NETMAKER_VERSION}'" -o build/netclient-darwin/netclient .
          env CGO_ENABLED=1 GOOS=darwin GOARCH=arm64 go build -tags=desktop,production -ldflags="-s -w -X 'main.version=${NETMAKER_VERSION}'" -o build/netclient-darwin-arm64/netclient main.go
      - name: Upload darwin-amd64 to Release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: netclient/build/netclient-darwin/netclient
          tag: ${{ env.NETMAKER_VERSION }}
          overwrite: true
          prerelease: true
          asset_name: netclient-darwin-amd64

      - name: Upload darwin-arm64 to Release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: netclient/build/netclient-darwin-arm64/netclient
          tag: ${{ env.NETMAKER_VERSION }}
          overwrite: true
          prerelease: true
          asset_name: netclient-darwin-arm64

  netclient-windows:
    runs-on: windows-latest
    needs: version
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set Variables
        run: |
          TAG=${{needs.version.outputs.tag}}
          VERSION=${{needs.version.outputs.version}}
          echo "NETMAKER_VERSION=${TAG}"  >> $GITHUB_ENV
          echo "PACKAGE_VERSION=${VERSION}" >> $GITHUB_ENV
        shell: bash
      - name: Setup go
        uses: actions/setup-go@v3
        with:
          go-version: 1.19
      - name: Mysys2 setup
        uses: msys2/setup-msys2@v2
        with:
          install: >-
            git
            mingw-w64-x86_64-toolchain
      - name: Build
        run: |
          echo $(go env GOPATH)/bin >> $GITHUB_PATH
          cd netclient
          go get -v github.com/josephspurrier/goversioninfo
          go install -v github.com/josephspurrier/goversioninfo/cmd/goversioninfo
          go generate
          go build -tags=gui -ldflags="-X 'main.version=${NETMAKER_VERSION}'" -o build/netclient.exe .

      - name: Upload netclient windows to Release
        continue-on-error: true
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: netclient/build/netclient.exe
          tag: ${{ env.NETMAKER_VERSION }}
          overwrite: true
          prerelease: true
          asset_name: netclient.exe
          
