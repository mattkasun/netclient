name: Release

on:
  workflow_dispatch:
    inputs:
      version:
        description: "new version number"
        required: true
      prerelease:
        description: "is this a prerelease"
        required: true
        type: boolean

jobs:
  Release-Branch:
    runs-on: ubuntu-latest
    steps:
      - name: create branch
        uses: actions/checkout@v3
        with:
          ref: develop
      - name: setup go
        uses: actions/setup-go@v3
        with:
          go-version: 1.19
      - name: setup git
        run: |
          git config user.name "Github Actions"
          git config user.emaail "info@netmaker.io"
      - name: fix go mod
        run: |
          go get github.com/gravitl/netmaker@${{ github.event.inputs.version }}
          go mod tidy
          git commit -am 'use netmaker@${{ github.event.inputs.version }}'
      - name: create release Branch
        run: |
          git switch -c release_${{ github.event.inputs.version }}
          if git tag --list | grep ${{ github.event.inputs.version }}; then
          git tag -d ${{ github.event.inputs.version }}
          fi
          git tag ${{ github.event.inputs.version }}
          git push origin release_${{ github.event.inputs.version }}
  
  linux-headless:
    if: ${{ github.event.inputs.prerelease }} == "false"
    runs-on: ubuntu-latest
    needs: Release-Branch
    steps:
      - name: checkout
        uses: actions/checkout@v3
        with:
          ref: release_${{ github.event.inputs.version }}
          fetch-depth: 0
      - run: git fetch --force --tags
      - name: Setup go
        uses: actions/setup-go@v3
        with:
          go-version: 1.19
      - name: goreleaser
        uses: goreleaser/goreleaser-action@v4
        with:
          args: release --clean
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN  }}
        
  freebsd-headless:
    if: ${{ github.event.inputs.prerelease }} == "false"
    runs-on: ubuntu-latest
    needs: Release-Branch
    steps:
      - name: build freebsd
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: freebsd.clustercat.com
          username: freebsd
          key: ${{ secrets.TESTING_SSH_KEY }}
          script: |
            cd netclient
            git switch release_${{ github.event.inputs.version }}
            git restore .
            git pull
            go build -tags headless .
      - name: setup ssh
        run: |
          mkdir -p ~/.ssh/
          echo "$SSH_KEY" > ~/.ssh/id_devops
          chmod 600 ~/.ssh/id_devops
          cat >>~/.ssh/config <<END
          Host *.clustercat.com
            User freebsd
            IdentityFile ~/.ssh/id_devops
            StrictHostKeyChecking no
          END
        env:
          SSH_KEY: ${{ secrets.TESTING_SSH_KEY }}
      - name: get freebsd binary
        run: |
          scp freebsd@freebsd.clustercat.com:~/netclient/netclient /tmp/
      - name: upload freebsd to release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: /tmp/netclient
          tag: ${{ github.event.inputs.version }}
          overwrite: true
          prerelease: true
          asset_name: netclient-freebsd-amd64
